{"version":3,"sources":["../../src/payu/tools.js"],"names":["Q","require","base64","module","exports","payUUrlsMap","accountData","transactions","secureHash","encode","apiLogin","apiKey","ping","deferred","defer","queries","headers","data","test","then","resp","Math","floor","statusCode","resolve","body","reject","catch","err","promise"],"mappings":";;AAAA;;AACA,IAAIA,IAAIC,QAAQ,GAAR,CAAR;AACA,IAAIC,SAASD,QAAQ,SAAR,CAAb;;AAEAE,OAAOC,OAAP,GAAiB,UAAUC,WAAV,EAAuBC,WAAvB,EAAoC;AACjD,QAAIC,eAAe,EAAnB;AACA,QAAIC,aAAaN,OAAOO,MAAP,CAAcH,YAAYI,QAAZ,GAAqB,GAArB,GAAyBJ,YAAYK,MAAnD,CAAjB;;AAEA;AACAJ,iBAAaK,IAAb,GAAoB,YAAY;AAC5B,YAAIC,WAAWb,EAAEc,KAAF,EAAf;AACA,sCAAY,MAAZ,EAAoBT,YAAYU,OAAhC,EAAyC;AACrCC,qBAAS;AACL,iCAAiB,WAASR;AADrB,aAD4B;AAIrCS,kBAAM;AACF,wBAAQX,YAAYY,IADlB;AAEF,4BAAY,IAFV;AAGF,2BAAW,MAHT;AAIF,4BAAY;AACT,gCAAYZ,YAAYI,QADf;AAET,8BAAUJ,YAAYK;AAFb;AAJV;AAJ+B,SAAzC,EAaGQ,IAbH,CAaQ,UAAUC,IAAV,EAAgB;AACpB,gBAAIC,KAAKC,KAAL,CAAWF,KAAKG,UAAL,GAAgB,GAA3B,KAAmC,CAAvC,EAA0C;AACtCV,yBAASW,OAAT,CAAiBJ,KAAKK,IAAtB;AACA;AACH;AACDZ,qBAASa,MAAT,CAAgBN,IAAhB;AACH,SAnBD,EAmBGO,KAnBH,CAmBS,UAAUC,GAAV,EAAe;AACpBf,qBAASa,MAAT,CAAgBE,GAAhB;AACH,SArBD;AAsBA,eAAOf,SAASgB,OAAhB;AACH,KAzBD;;AA2BA,WAAOtB,YAAP;AACH,CAjCD","file":"tools.js","sourcesContent":["import { httpRequest } from '../services/httpRequest';\nvar Q = require('q');\nvar base64 = require('base-64');\n\nmodule.exports = function (payUUrlsMap, accountData) {\n    var transactions = {};\n    var secureHash = base64.encode(accountData.apiLogin+':'+accountData.apiKey);\n\n    // Ping\n    transactions.ping = function () {\n        var deferred = Q.defer();\n        httpRequest('POST', payUUrlsMap.queries, {\n            headers: {\n                'Authorization': 'Basic '+secureHash\n            },\n            data: {\n                \"test\": accountData.test,\n                \"language\": \"en\",\n                \"command\": \"PING\",\n                \"merchant\": {\n                   \"apiLogin\": accountData.apiLogin,\n                   \"apiKey\": accountData.apiKey\n                }\n            }\n        }).then(function (resp) {\n            if (Math.floor(resp.statusCode/100) == 2) {\n                deferred.resolve(resp.body);\n                return;\n            }\n            deferred.reject(resp);\n        }).catch(function (err) {\n            deferred.reject(err);\n        });\n        return deferred.promise;\n    }\n\n    return transactions;\n}"]}